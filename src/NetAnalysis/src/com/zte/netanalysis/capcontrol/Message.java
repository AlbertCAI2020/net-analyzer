// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package com.zte.netanalysis.capcontrol;

public final class Message {
  private Message() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code com.zte.netanalysis.capcontrol.MsgType}
   */
  public enum MsgType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>START_CAP_REQ = 1;</code>
     */
    START_CAP_REQ(0, 1),
    /**
     * <code>START_CAP_RES = 2;</code>
     */
    START_CAP_RES(1, 2),
    /**
     * <code>STOP_CAP_REQ = 3;</code>
     */
    STOP_CAP_REQ(2, 3),
    /**
     * <code>STOP_CAP_RES = 4;</code>
     */
    STOP_CAP_RES(3, 4),
    /**
     * <code>IP_STAT_NOTIFY = 5;</code>
     */
    IP_STAT_NOTIFY(4, 5),
    /**
     * <code>TCP_STAT_NOTIFY = 6;</code>
     */
    TCP_STAT_NOTIFY(5, 6),
    /**
     * <code>TCP_SES_NOTIFY = 7;</code>
     */
    TCP_SES_NOTIFY(6, 7),
    /**
     * <code>DNS_TRANS_NOTIFY = 8;</code>
     */
    DNS_TRANS_NOTIFY(7, 8),
    ;

    /**
     * <code>START_CAP_REQ = 1;</code>
     */
    public static final int START_CAP_REQ_VALUE = 1;
    /**
     * <code>START_CAP_RES = 2;</code>
     */
    public static final int START_CAP_RES_VALUE = 2;
    /**
     * <code>STOP_CAP_REQ = 3;</code>
     */
    public static final int STOP_CAP_REQ_VALUE = 3;
    /**
     * <code>STOP_CAP_RES = 4;</code>
     */
    public static final int STOP_CAP_RES_VALUE = 4;
    /**
     * <code>IP_STAT_NOTIFY = 5;</code>
     */
    public static final int IP_STAT_NOTIFY_VALUE = 5;
    /**
     * <code>TCP_STAT_NOTIFY = 6;</code>
     */
    public static final int TCP_STAT_NOTIFY_VALUE = 6;
    /**
     * <code>TCP_SES_NOTIFY = 7;</code>
     */
    public static final int TCP_SES_NOTIFY_VALUE = 7;
    /**
     * <code>DNS_TRANS_NOTIFY = 8;</code>
     */
    public static final int DNS_TRANS_NOTIFY_VALUE = 8;


    public final int getNumber() { return value; }

    public static MsgType valueOf(int value) {
      switch (value) {
        case 1: return START_CAP_REQ;
        case 2: return START_CAP_RES;
        case 3: return STOP_CAP_REQ;
        case 4: return STOP_CAP_RES;
        case 5: return IP_STAT_NOTIFY;
        case 6: return TCP_STAT_NOTIFY;
        case 7: return TCP_SES_NOTIFY;
        case 8: return DNS_TRANS_NOTIFY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MsgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MsgType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgType>() {
            public MsgType findValueByNumber(int number) {
              return MsgType.valueOf(number);
            }
          };

    private final int value;

    private MsgType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.zte.netanalysis.capcontrol.MsgType)
  }

  public interface StartCapReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.StartCapReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 seq = 1;</code>
     */
    boolean hasSeq();
    /**
     * <code>required int32 seq = 1;</code>
     */
    int getSeq();

    /**
     * <code>optional string url = 2;</code>
     */
    boolean hasUrl();
    /**
     * <code>optional string url = 2;</code>
     */
    java.lang.String getUrl();
    /**
     * <code>optional string url = 2;</code>
     */
    com.google.protobuf.ByteString
        getUrlBytes();

    /**
     * <code>optional string saveFile = 3;</code>
     */
    boolean hasSaveFile();
    /**
     * <code>optional string saveFile = 3;</code>
     */
    java.lang.String getSaveFile();
    /**
     * <code>optional string saveFile = 3;</code>
     */
    com.google.protobuf.ByteString
        getSaveFileBytes();

    /**
     * <code>optional uint32 tcpStatInterval = 4;</code>
     */
    boolean hasTcpStatInterval();
    /**
     * <code>optional uint32 tcpStatInterval = 4;</code>
     */
    int getTcpStatInterval();
  }
  /**
   * Protobuf type {@code com.zte.netanalysis.capcontrol.StartCapReq}
   */
  public static final class StartCapReq extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.StartCapReq)
      StartCapReqOrBuilder {
    // Use StartCapReq.newBuilder() to construct.
    private StartCapReq(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StartCapReq(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final StartCapReq defaultInstance;
    public static StartCapReq getDefaultInstance() {
      return defaultInstance;
    }

    public StartCapReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private StartCapReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seq_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              url_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              saveFile_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              tcpStatInterval_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<StartCapReq> PARSER =
        new com.google.protobuf.AbstractParser<StartCapReq>() {
      public StartCapReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StartCapReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StartCapReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SEQ_FIELD_NUMBER = 1;
    private int seq_;
    /**
     * <code>required int32 seq = 1;</code>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 seq = 1;</code>
     */
    public int getSeq() {
      return seq_;
    }

    public static final int URL_FIELD_NUMBER = 2;
    private java.lang.Object url_;
    /**
     * <code>optional string url = 2;</code>
     */
    public boolean hasUrl() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string url = 2;</code>
     */
    public java.lang.String getUrl() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          url_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string url = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUrlBytes() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SAVEFILE_FIELD_NUMBER = 3;
    private java.lang.Object saveFile_;
    /**
     * <code>optional string saveFile = 3;</code>
     */
    public boolean hasSaveFile() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string saveFile = 3;</code>
     */
    public java.lang.String getSaveFile() {
      java.lang.Object ref = saveFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          saveFile_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string saveFile = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSaveFileBytes() {
      java.lang.Object ref = saveFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        saveFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TCPSTATINTERVAL_FIELD_NUMBER = 4;
    private int tcpStatInterval_;
    /**
     * <code>optional uint32 tcpStatInterval = 4;</code>
     */
    public boolean hasTcpStatInterval() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 tcpStatInterval = 4;</code>
     */
    public int getTcpStatInterval() {
      return tcpStatInterval_;
    }

    private void initFields() {
      seq_ = 0;
      url_ = "";
      saveFile_ = "";
      tcpStatInterval_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeq()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUrlBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSaveFileBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, tcpStatInterval_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUrlBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSaveFileBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, tcpStatInterval_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.StartCapReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.StartCapReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.zte.netanalysis.capcontrol.Message.StartCapReq, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.StartCapReq)
        com.zte.netanalysis.capcontrol.Message.StartCapReqOrBuilder {
      // Construct using com.zte.netanalysis.capcontrol.Message.StartCapReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        url_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        saveFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        tcpStatInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.zte.netanalysis.capcontrol.Message.StartCapReq getDefaultInstanceForType() {
        return com.zte.netanalysis.capcontrol.Message.StartCapReq.getDefaultInstance();
      }

      public com.zte.netanalysis.capcontrol.Message.StartCapReq build() {
        com.zte.netanalysis.capcontrol.Message.StartCapReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zte.netanalysis.capcontrol.Message.StartCapReq buildPartial() {
        com.zte.netanalysis.capcontrol.Message.StartCapReq result = new com.zte.netanalysis.capcontrol.Message.StartCapReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.url_ = url_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.saveFile_ = saveFile_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tcpStatInterval_ = tcpStatInterval_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.StartCapReq other) {
        if (other == com.zte.netanalysis.capcontrol.Message.StartCapReq.getDefaultInstance()) return this;
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasUrl()) {
          bitField0_ |= 0x00000002;
          url_ = other.url_;
          
        }
        if (other.hasSaveFile()) {
          bitField0_ |= 0x00000004;
          saveFile_ = other.saveFile_;
          
        }
        if (other.hasTcpStatInterval()) {
          setTcpStatInterval(other.getTcpStatInterval());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeq()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zte.netanalysis.capcontrol.Message.StartCapReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zte.netanalysis.capcontrol.Message.StartCapReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seq_ ;
      /**
       * <code>required int32 seq = 1;</code>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000001;
        seq_ = value;
        
        return this;
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seq_ = 0;
        
        return this;
      }

      private java.lang.Object url_ = "";
      /**
       * <code>optional string url = 2;</code>
       */
      public boolean hasUrl() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public java.lang.String getUrl() {
        java.lang.Object ref = url_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            url_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        java.lang.Object ref = url_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public Builder setUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        url_ = value;
        
        return this;
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public Builder clearUrl() {
        bitField0_ = (bitField0_ & ~0x00000002);
        url_ = getDefaultInstance().getUrl();
        
        return this;
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        url_ = value;
        
        return this;
      }

      private java.lang.Object saveFile_ = "";
      /**
       * <code>optional string saveFile = 3;</code>
       */
      public boolean hasSaveFile() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string saveFile = 3;</code>
       */
      public java.lang.String getSaveFile() {
        java.lang.Object ref = saveFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            saveFile_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string saveFile = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSaveFileBytes() {
        java.lang.Object ref = saveFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          saveFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string saveFile = 3;</code>
       */
      public Builder setSaveFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        saveFile_ = value;
        
        return this;
      }
      /**
       * <code>optional string saveFile = 3;</code>
       */
      public Builder clearSaveFile() {
        bitField0_ = (bitField0_ & ~0x00000004);
        saveFile_ = getDefaultInstance().getSaveFile();
        
        return this;
      }
      /**
       * <code>optional string saveFile = 3;</code>
       */
      public Builder setSaveFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        saveFile_ = value;
        
        return this;
      }

      private int tcpStatInterval_ ;
      /**
       * <code>optional uint32 tcpStatInterval = 4;</code>
       */
      public boolean hasTcpStatInterval() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 tcpStatInterval = 4;</code>
       */
      public int getTcpStatInterval() {
        return tcpStatInterval_;
      }
      /**
       * <code>optional uint32 tcpStatInterval = 4;</code>
       */
      public Builder setTcpStatInterval(int value) {
        bitField0_ |= 0x00000008;
        tcpStatInterval_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 tcpStatInterval = 4;</code>
       */
      public Builder clearTcpStatInterval() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tcpStatInterval_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.StartCapReq)
    }

    static {
      defaultInstance = new StartCapReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.StartCapReq)
  }

  public interface StartCapResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.StartCapRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 seq = 1;</code>
     */
    boolean hasSeq();
    /**
     * <code>required int32 seq = 1;</code>
     */
    int getSeq();

    /**
     * <code>required int32 ack = 2;</code>
     */
    boolean hasAck();
    /**
     * <code>required int32 ack = 2;</code>
     */
    int getAck();

    /**
     * <code>required uint64 time = 3;</code>
     */
    boolean hasTime();
    /**
     * <code>required uint64 time = 3;</code>
     */
    long getTime();
  }
  /**
   * Protobuf type {@code com.zte.netanalysis.capcontrol.StartCapRes}
   */
  public static final class StartCapRes extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.StartCapRes)
      StartCapResOrBuilder {
    // Use StartCapRes.newBuilder() to construct.
    private StartCapRes(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StartCapRes(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final StartCapRes defaultInstance;
    public static StartCapRes getDefaultInstance() {
      return defaultInstance;
    }

    public StartCapRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private StartCapRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seq_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ack_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              time_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<StartCapRes> PARSER =
        new com.google.protobuf.AbstractParser<StartCapRes>() {
      public StartCapRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StartCapRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StartCapRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SEQ_FIELD_NUMBER = 1;
    private int seq_;
    /**
     * <code>required int32 seq = 1;</code>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 seq = 1;</code>
     */
    public int getSeq() {
      return seq_;
    }

    public static final int ACK_FIELD_NUMBER = 2;
    private int ack_;
    /**
     * <code>required int32 ack = 2;</code>
     */
    public boolean hasAck() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 ack = 2;</code>
     */
    public int getAck() {
      return ack_;
    }

    public static final int TIME_FIELD_NUMBER = 3;
    private long time_;
    /**
     * <code>required uint64 time = 3;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 time = 3;</code>
     */
    public long getTime() {
      return time_;
    }

    private void initFields() {
      seq_ = 0;
      ack_ = 0;
      time_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeq()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAck()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, ack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, time_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, time_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StartCapRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.StartCapRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.StartCapRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.zte.netanalysis.capcontrol.Message.StartCapRes, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.StartCapRes)
        com.zte.netanalysis.capcontrol.Message.StartCapResOrBuilder {
      // Construct using com.zte.netanalysis.capcontrol.Message.StartCapRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.zte.netanalysis.capcontrol.Message.StartCapRes getDefaultInstanceForType() {
        return com.zte.netanalysis.capcontrol.Message.StartCapRes.getDefaultInstance();
      }

      public com.zte.netanalysis.capcontrol.Message.StartCapRes build() {
        com.zte.netanalysis.capcontrol.Message.StartCapRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zte.netanalysis.capcontrol.Message.StartCapRes buildPartial() {
        com.zte.netanalysis.capcontrol.Message.StartCapRes result = new com.zte.netanalysis.capcontrol.Message.StartCapRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ack_ = ack_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.StartCapRes other) {
        if (other == com.zte.netanalysis.capcontrol.Message.StartCapRes.getDefaultInstance()) return this;
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasAck()) {
          setAck(other.getAck());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeq()) {
          
          return false;
        }
        if (!hasAck()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zte.netanalysis.capcontrol.Message.StartCapRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zte.netanalysis.capcontrol.Message.StartCapRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seq_ ;
      /**
       * <code>required int32 seq = 1;</code>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000001;
        seq_ = value;
        
        return this;
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seq_ = 0;
        
        return this;
      }

      private int ack_ ;
      /**
       * <code>required int32 ack = 2;</code>
       */
      public boolean hasAck() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 ack = 2;</code>
       */
      public int getAck() {
        return ack_;
      }
      /**
       * <code>required int32 ack = 2;</code>
       */
      public Builder setAck(int value) {
        bitField0_ |= 0x00000002;
        ack_ = value;
        
        return this;
      }
      /**
       * <code>required int32 ack = 2;</code>
       */
      public Builder clearAck() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ack_ = 0;
        
        return this;
      }

      private long time_ ;
      /**
       * <code>required uint64 time = 3;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 time = 3;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>required uint64 time = 3;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000004;
        time_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 time = 3;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        time_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.StartCapRes)
    }

    static {
      defaultInstance = new StartCapRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.StartCapRes)
  }

  public interface StopCapReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.StopCapReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 seq = 1;</code>
     */
    boolean hasSeq();
    /**
     * <code>required int32 seq = 1;</code>
     */
    int getSeq();
  }
  /**
   * Protobuf type {@code com.zte.netanalysis.capcontrol.StopCapReq}
   */
  public static final class StopCapReq extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.StopCapReq)
      StopCapReqOrBuilder {
    // Use StopCapReq.newBuilder() to construct.
    private StopCapReq(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StopCapReq(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final StopCapReq defaultInstance;
    public static StopCapReq getDefaultInstance() {
      return defaultInstance;
    }

    public StopCapReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private StopCapReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seq_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<StopCapReq> PARSER =
        new com.google.protobuf.AbstractParser<StopCapReq>() {
      public StopCapReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StopCapReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StopCapReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SEQ_FIELD_NUMBER = 1;
    private int seq_;
    /**
     * <code>required int32 seq = 1;</code>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 seq = 1;</code>
     */
    public int getSeq() {
      return seq_;
    }

    private void initFields() {
      seq_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeq()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seq_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seq_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.StopCapReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.StopCapReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.zte.netanalysis.capcontrol.Message.StopCapReq, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.StopCapReq)
        com.zte.netanalysis.capcontrol.Message.StopCapReqOrBuilder {
      // Construct using com.zte.netanalysis.capcontrol.Message.StopCapReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.zte.netanalysis.capcontrol.Message.StopCapReq getDefaultInstanceForType() {
        return com.zte.netanalysis.capcontrol.Message.StopCapReq.getDefaultInstance();
      }

      public com.zte.netanalysis.capcontrol.Message.StopCapReq build() {
        com.zte.netanalysis.capcontrol.Message.StopCapReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zte.netanalysis.capcontrol.Message.StopCapReq buildPartial() {
        com.zte.netanalysis.capcontrol.Message.StopCapReq result = new com.zte.netanalysis.capcontrol.Message.StopCapReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seq_ = seq_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.StopCapReq other) {
        if (other == com.zte.netanalysis.capcontrol.Message.StopCapReq.getDefaultInstance()) return this;
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeq()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zte.netanalysis.capcontrol.Message.StopCapReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zte.netanalysis.capcontrol.Message.StopCapReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seq_ ;
      /**
       * <code>required int32 seq = 1;</code>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000001;
        seq_ = value;
        
        return this;
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seq_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.StopCapReq)
    }

    static {
      defaultInstance = new StopCapReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.StopCapReq)
  }

  public interface StopCapResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.StopCapRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 seq = 1;</code>
     */
    boolean hasSeq();
    /**
     * <code>required int32 seq = 1;</code>
     */
    int getSeq();

    /**
     * <code>required uint64 time = 2;</code>
     */
    boolean hasTime();
    /**
     * <code>required uint64 time = 2;</code>
     */
    long getTime();

    /**
     * <code>optional uint32 totalSecs = 3;</code>
     */
    boolean hasTotalSecs();
    /**
     * <code>optional uint32 totalSecs = 3;</code>
     */
    int getTotalSecs();

    /**
     * <code>optional uint32 totalPktNum = 4;</code>
     */
    boolean hasTotalPktNum();
    /**
     * <code>optional uint32 totalPktNum = 4;</code>
     */
    int getTotalPktNum();

    /**
     * <code>optional uint32 droppedPktNum = 5;</code>
     */
    boolean hasDroppedPktNum();
    /**
     * <code>optional uint32 droppedPktNum = 5;</code>
     */
    int getDroppedPktNum();
  }
  /**
   * Protobuf type {@code com.zte.netanalysis.capcontrol.StopCapRes}
   */
  public static final class StopCapRes extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.StopCapRes)
      StopCapResOrBuilder {
    // Use StopCapRes.newBuilder() to construct.
    private StopCapRes(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StopCapRes(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final StopCapRes defaultInstance;
    public static StopCapRes getDefaultInstance() {
      return defaultInstance;
    }

    public StopCapRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private StopCapRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seq_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              totalSecs_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              totalPktNum_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              droppedPktNum_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<StopCapRes> PARSER =
        new com.google.protobuf.AbstractParser<StopCapRes>() {
      public StopCapRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StopCapRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StopCapRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SEQ_FIELD_NUMBER = 1;
    private int seq_;
    /**
     * <code>required int32 seq = 1;</code>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 seq = 1;</code>
     */
    public int getSeq() {
      return seq_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private long time_;
    /**
     * <code>required uint64 time = 2;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 time = 2;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int TOTALSECS_FIELD_NUMBER = 3;
    private int totalSecs_;
    /**
     * <code>optional uint32 totalSecs = 3;</code>
     */
    public boolean hasTotalSecs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 totalSecs = 3;</code>
     */
    public int getTotalSecs() {
      return totalSecs_;
    }

    public static final int TOTALPKTNUM_FIELD_NUMBER = 4;
    private int totalPktNum_;
    /**
     * <code>optional uint32 totalPktNum = 4;</code>
     */
    public boolean hasTotalPktNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 totalPktNum = 4;</code>
     */
    public int getTotalPktNum() {
      return totalPktNum_;
    }

    public static final int DROPPEDPKTNUM_FIELD_NUMBER = 5;
    private int droppedPktNum_;
    /**
     * <code>optional uint32 droppedPktNum = 5;</code>
     */
    public boolean hasDroppedPktNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 droppedPktNum = 5;</code>
     */
    public int getDroppedPktNum() {
      return droppedPktNum_;
    }

    private void initFields() {
      seq_ = 0;
      time_ = 0L;
      totalSecs_ = 0;
      totalPktNum_ = 0;
      droppedPktNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeq()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, totalSecs_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, totalPktNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, droppedPktNum_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, totalSecs_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, totalPktNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, droppedPktNum_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.StopCapRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.StopCapRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.StopCapRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.zte.netanalysis.capcontrol.Message.StopCapRes, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.StopCapRes)
        com.zte.netanalysis.capcontrol.Message.StopCapResOrBuilder {
      // Construct using com.zte.netanalysis.capcontrol.Message.StopCapRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        totalSecs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalPktNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        droppedPktNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.zte.netanalysis.capcontrol.Message.StopCapRes getDefaultInstanceForType() {
        return com.zte.netanalysis.capcontrol.Message.StopCapRes.getDefaultInstance();
      }

      public com.zte.netanalysis.capcontrol.Message.StopCapRes build() {
        com.zte.netanalysis.capcontrol.Message.StopCapRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zte.netanalysis.capcontrol.Message.StopCapRes buildPartial() {
        com.zte.netanalysis.capcontrol.Message.StopCapRes result = new com.zte.netanalysis.capcontrol.Message.StopCapRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalSecs_ = totalSecs_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalPktNum_ = totalPktNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.droppedPktNum_ = droppedPktNum_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.StopCapRes other) {
        if (other == com.zte.netanalysis.capcontrol.Message.StopCapRes.getDefaultInstance()) return this;
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasTotalSecs()) {
          setTotalSecs(other.getTotalSecs());
        }
        if (other.hasTotalPktNum()) {
          setTotalPktNum(other.getTotalPktNum());
        }
        if (other.hasDroppedPktNum()) {
          setDroppedPktNum(other.getDroppedPktNum());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeq()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zte.netanalysis.capcontrol.Message.StopCapRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zte.netanalysis.capcontrol.Message.StopCapRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seq_ ;
      /**
       * <code>required int32 seq = 1;</code>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000001;
        seq_ = value;
        
        return this;
      }
      /**
       * <code>required int32 seq = 1;</code>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seq_ = 0;
        
        return this;
      }

      private long time_ ;
      /**
       * <code>required uint64 time = 2;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 time = 2;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>required uint64 time = 2;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 time = 2;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0L;
        
        return this;
      }

      private int totalSecs_ ;
      /**
       * <code>optional uint32 totalSecs = 3;</code>
       */
      public boolean hasTotalSecs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 totalSecs = 3;</code>
       */
      public int getTotalSecs() {
        return totalSecs_;
      }
      /**
       * <code>optional uint32 totalSecs = 3;</code>
       */
      public Builder setTotalSecs(int value) {
        bitField0_ |= 0x00000004;
        totalSecs_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 totalSecs = 3;</code>
       */
      public Builder clearTotalSecs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalSecs_ = 0;
        
        return this;
      }

      private int totalPktNum_ ;
      /**
       * <code>optional uint32 totalPktNum = 4;</code>
       */
      public boolean hasTotalPktNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 totalPktNum = 4;</code>
       */
      public int getTotalPktNum() {
        return totalPktNum_;
      }
      /**
       * <code>optional uint32 totalPktNum = 4;</code>
       */
      public Builder setTotalPktNum(int value) {
        bitField0_ |= 0x00000008;
        totalPktNum_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 totalPktNum = 4;</code>
       */
      public Builder clearTotalPktNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalPktNum_ = 0;
        
        return this;
      }

      private int droppedPktNum_ ;
      /**
       * <code>optional uint32 droppedPktNum = 5;</code>
       */
      public boolean hasDroppedPktNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 droppedPktNum = 5;</code>
       */
      public int getDroppedPktNum() {
        return droppedPktNum_;
      }
      /**
       * <code>optional uint32 droppedPktNum = 5;</code>
       */
      public Builder setDroppedPktNum(int value) {
        bitField0_ |= 0x00000010;
        droppedPktNum_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 droppedPktNum = 5;</code>
       */
      public Builder clearDroppedPktNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        droppedPktNum_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.StopCapRes)
    }

    static {
      defaultInstance = new StopCapRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.StopCapRes)
  }

  public interface IpStatNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.IpStatNotify)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint64 startTime = 1;</code>
     */
    boolean hasStartTime();
    /**
     * <code>required uint64 startTime = 1;</code>
     */
    long getStartTime();

    /**
     * <code>required uint64 endTime = 2;</code>
     */
    boolean hasEndTime();
    /**
     * <code>required uint64 endTime = 2;</code>
     */
    long getEndTime();

    /**
     * <code>optional uint32 pktNum = 3;</code>
     */
    boolean hasPktNum();
    /**
     * <code>optional uint32 pktNum = 3;</code>
     */
    int getPktNum();

    /**
     * <code>optional uint32 bytes = 4;</code>
     */
    boolean hasBytes();
    /**
     * <code>optional uint32 bytes = 4;</code>
     */
    int getBytes();
  }
  /**
   * Protobuf type {@code com.zte.netanalysis.capcontrol.IpStatNotify}
   */
  public static final class IpStatNotify extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.IpStatNotify)
      IpStatNotifyOrBuilder {
    // Use IpStatNotify.newBuilder() to construct.
    private IpStatNotify(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IpStatNotify(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IpStatNotify defaultInstance;
    public static IpStatNotify getDefaultInstance() {
      return defaultInstance;
    }

    public IpStatNotify getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IpStatNotify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startTime_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endTime_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pktNum_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              bytes_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IpStatNotify> PARSER =
        new com.google.protobuf.AbstractParser<IpStatNotify>() {
      public IpStatNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IpStatNotify(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IpStatNotify> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STARTTIME_FIELD_NUMBER = 1;
    private long startTime_;
    /**
     * <code>required uint64 startTime = 1;</code>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 startTime = 1;</code>
     */
    public long getStartTime() {
      return startTime_;
    }

    public static final int ENDTIME_FIELD_NUMBER = 2;
    private long endTime_;
    /**
     * <code>required uint64 endTime = 2;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 endTime = 2;</code>
     */
    public long getEndTime() {
      return endTime_;
    }

    public static final int PKTNUM_FIELD_NUMBER = 3;
    private int pktNum_;
    /**
     * <code>optional uint32 pktNum = 3;</code>
     */
    public boolean hasPktNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 pktNum = 3;</code>
     */
    public int getPktNum() {
      return pktNum_;
    }

    public static final int BYTES_FIELD_NUMBER = 4;
    private int bytes_;
    /**
     * <code>optional uint32 bytes = 4;</code>
     */
    public boolean hasBytes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 bytes = 4;</code>
     */
    public int getBytes() {
      return bytes_;
    }

    private void initFields() {
      startTime_ = 0L;
      endTime_ = 0L;
      pktNum_ = 0;
      bytes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, startTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, endTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, pktNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, bytes_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, startTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, endTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, pktNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, bytes_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.IpStatNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.IpStatNotify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.IpStatNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.zte.netanalysis.capcontrol.Message.IpStatNotify, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.IpStatNotify)
        com.zte.netanalysis.capcontrol.Message.IpStatNotifyOrBuilder {
      // Construct using com.zte.netanalysis.capcontrol.Message.IpStatNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        pktNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        bytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.zte.netanalysis.capcontrol.Message.IpStatNotify getDefaultInstanceForType() {
        return com.zte.netanalysis.capcontrol.Message.IpStatNotify.getDefaultInstance();
      }

      public com.zte.netanalysis.capcontrol.Message.IpStatNotify build() {
        com.zte.netanalysis.capcontrol.Message.IpStatNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zte.netanalysis.capcontrol.Message.IpStatNotify buildPartial() {
        com.zte.netanalysis.capcontrol.Message.IpStatNotify result = new com.zte.netanalysis.capcontrol.Message.IpStatNotify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pktNum_ = pktNum_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bytes_ = bytes_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.IpStatNotify other) {
        if (other == com.zte.netanalysis.capcontrol.Message.IpStatNotify.getDefaultInstance()) return this;
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasPktNum()) {
          setPktNum(other.getPktNum());
        }
        if (other.hasBytes()) {
          setBytes(other.getBytes());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasEndTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zte.netanalysis.capcontrol.Message.IpStatNotify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zte.netanalysis.capcontrol.Message.IpStatNotify) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long startTime_ ;
      /**
       * <code>required uint64 startTime = 1;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 startTime = 1;</code>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>required uint64 startTime = 1;</code>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000001;
        startTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 startTime = 1;</code>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = 0L;
        
        return this;
      }

      private long endTime_ ;
      /**
       * <code>required uint64 endTime = 2;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 endTime = 2;</code>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>required uint64 endTime = 2;</code>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000002;
        endTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 endTime = 2;</code>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = 0L;
        
        return this;
      }

      private int pktNum_ ;
      /**
       * <code>optional uint32 pktNum = 3;</code>
       */
      public boolean hasPktNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 pktNum = 3;</code>
       */
      public int getPktNum() {
        return pktNum_;
      }
      /**
       * <code>optional uint32 pktNum = 3;</code>
       */
      public Builder setPktNum(int value) {
        bitField0_ |= 0x00000004;
        pktNum_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 pktNum = 3;</code>
       */
      public Builder clearPktNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pktNum_ = 0;
        
        return this;
      }

      private int bytes_ ;
      /**
       * <code>optional uint32 bytes = 4;</code>
       */
      public boolean hasBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 bytes = 4;</code>
       */
      public int getBytes() {
        return bytes_;
      }
      /**
       * <code>optional uint32 bytes = 4;</code>
       */
      public Builder setBytes(int value) {
        bitField0_ |= 0x00000008;
        bytes_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 bytes = 4;</code>
       */
      public Builder clearBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bytes_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.IpStatNotify)
    }

    static {
      defaultInstance = new IpStatNotify(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.IpStatNotify)
  }

  public interface TcpStatNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.TcpStatNotify)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint64 startTime = 1;</code>
     */
    boolean hasStartTime();
    /**
     * <code>required uint64 startTime = 1;</code>
     */
    long getStartTime();

    /**
     * <code>required uint64 endTime = 2;</code>
     */
    boolean hasEndTime();
    /**
     * <code>required uint64 endTime = 2;</code>
     */
    long getEndTime();

    /**
     * <code>required uint32 sessionId = 3;</code>
     */
    boolean hasSessionId();
    /**
     * <code>required uint32 sessionId = 3;</code>
     */
    int getSessionId();

    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
     */
    boolean hasDlStat();
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
     */
    com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat getDlStat();

    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
     */
    boolean hasUlStat();
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
     */
    com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat getUlStat();
  }
  /**
   * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpStatNotify}
   */
  public static final class TcpStatNotify extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.TcpStatNotify)
      TcpStatNotifyOrBuilder {
    // Use TcpStatNotify.newBuilder() to construct.
    private TcpStatNotify(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TcpStatNotify(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final TcpStatNotify defaultInstance;
    public static TcpStatNotify getDefaultInstance() {
      return defaultInstance;
    }

    public TcpStatNotify getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private TcpStatNotify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startTime_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endTime_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sessionId_ = input.readUInt32();
              break;
            }
            case 34: {
              com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = dlStat_.toBuilder();
              }
              dlStat_ = input.readMessage(com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dlStat_);
                dlStat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = ulStat_.toBuilder();
              }
              ulStat_ = input.readMessage(com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ulStat_);
                ulStat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TcpStatNotify> PARSER =
        new com.google.protobuf.AbstractParser<TcpStatNotify>() {
      public TcpStatNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TcpStatNotify(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TcpStatNotify> getParserForType() {
      return PARSER;
    }

    public interface DirStatOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional uint32 pktNum = 1;</code>
       */
      boolean hasPktNum();
      /**
       * <code>optional uint32 pktNum = 1;</code>
       */
      int getPktNum();

      /**
       * <code>optional uint32 bytes = 2;</code>
       */
      boolean hasBytes();
      /**
       * <code>optional uint32 bytes = 2;</code>
       */
      int getBytes();

      /**
       * <code>optional uint32 retransNum = 3;</code>
       */
      boolean hasRetransNum();
      /**
       * <code>optional uint32 retransNum = 3;</code>
       */
      int getRetransNum();

      /**
       * <code>optional uint32 retransBytes = 4;</code>
       */
      boolean hasRetransBytes();
      /**
       * <code>optional uint32 retransBytes = 4;</code>
       */
      int getRetransBytes();

      /**
       * <code>optional uint32 retransAckedNum = 5;</code>
       */
      boolean hasRetransAckedNum();
      /**
       * <code>optional uint32 retransAckedNum = 5;</code>
       */
      int getRetransAckedNum();

      /**
       * <code>optional uint32 retransAckedBytes = 6;</code>
       */
      boolean hasRetransAckedBytes();
      /**
       * <code>optional uint32 retransAckedBytes = 6;</code>
       */
      int getRetransAckedBytes();
    }
    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat}
     */
    public static final class DirStat extends
        com.google.protobuf.GeneratedMessageLite implements
        // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat)
        DirStatOrBuilder {
      // Use DirStat.newBuilder() to construct.
      private DirStat(com.google.protobuf.GeneratedMessageLite.Builder builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DirStat(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

      private static final DirStat defaultInstance;
      public static DirStat getDefaultInstance() {
        return defaultInstance;
      }

      public DirStat getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.ByteString unknownFields;
      private DirStat(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.ByteString.Output unknownFieldsOutput =
            com.google.protobuf.ByteString.newOutput();
        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
            com.google.protobuf.CodedOutputStream.newInstance(
                unknownFieldsOutput);
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                pktNum_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                bytes_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                retransNum_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                retransBytes_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                retransAckedNum_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                retransAckedBytes_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          try {
            unknownFieldsCodedOutput.flush();
          } catch (java.io.IOException e) {
          // Should not happen
          } finally {
            unknownFields = unknownFieldsOutput.toByteString();
          }
          makeExtensionsImmutable();
        }
      }
      public static com.google.protobuf.Parser<DirStat> PARSER =
          new com.google.protobuf.AbstractParser<DirStat>() {
        public DirStat parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DirStat(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DirStat> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int PKTNUM_FIELD_NUMBER = 1;
      private int pktNum_;
      /**
       * <code>optional uint32 pktNum = 1;</code>
       */
      public boolean hasPktNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 pktNum = 1;</code>
       */
      public int getPktNum() {
        return pktNum_;
      }

      public static final int BYTES_FIELD_NUMBER = 2;
      private int bytes_;
      /**
       * <code>optional uint32 bytes = 2;</code>
       */
      public boolean hasBytes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 bytes = 2;</code>
       */
      public int getBytes() {
        return bytes_;
      }

      public static final int RETRANSNUM_FIELD_NUMBER = 3;
      private int retransNum_;
      /**
       * <code>optional uint32 retransNum = 3;</code>
       */
      public boolean hasRetransNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 retransNum = 3;</code>
       */
      public int getRetransNum() {
        return retransNum_;
      }

      public static final int RETRANSBYTES_FIELD_NUMBER = 4;
      private int retransBytes_;
      /**
       * <code>optional uint32 retransBytes = 4;</code>
       */
      public boolean hasRetransBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 retransBytes = 4;</code>
       */
      public int getRetransBytes() {
        return retransBytes_;
      }

      public static final int RETRANSACKEDNUM_FIELD_NUMBER = 5;
      private int retransAckedNum_;
      /**
       * <code>optional uint32 retransAckedNum = 5;</code>
       */
      public boolean hasRetransAckedNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 retransAckedNum = 5;</code>
       */
      public int getRetransAckedNum() {
        return retransAckedNum_;
      }

      public static final int RETRANSACKEDBYTES_FIELD_NUMBER = 6;
      private int retransAckedBytes_;
      /**
       * <code>optional uint32 retransAckedBytes = 6;</code>
       */
      public boolean hasRetransAckedBytes() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 retransAckedBytes = 6;</code>
       */
      public int getRetransAckedBytes() {
        return retransAckedBytes_;
      }

      private void initFields() {
        pktNum_ = 0;
        bytes_ = 0;
        retransNum_ = 0;
        retransBytes_ = 0;
        retransAckedNum_ = 0;
        retransAckedBytes_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, pktNum_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, bytes_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, retransNum_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, retransBytes_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, retransAckedNum_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, retransAckedBytes_);
        }
        output.writeRawBytes(unknownFields);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, pktNum_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, bytes_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, retransNum_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, retransBytes_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, retransAckedNum_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, retransAckedBytes_);
        }
        size += unknownFields.size();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      /**
       * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat, Builder>
          implements
          // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat)
          com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStatOrBuilder {
        // Construct using com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          pktNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          bytes_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          retransNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          retransBytes_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          retransAckedNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          retransAckedBytes_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat getDefaultInstanceForType() {
          return com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance();
        }

        public com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat build() {
          com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat buildPartial() {
          com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat result = new com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.pktNum_ = pktNum_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.bytes_ = bytes_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.retransNum_ = retransNum_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.retransBytes_ = retransBytes_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.retransAckedNum_ = retransAckedNum_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.retransAckedBytes_ = retransAckedBytes_;
          result.bitField0_ = to_bitField0_;
          return result;
        }

        public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat other) {
          if (other == com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance()) return this;
          if (other.hasPktNum()) {
            setPktNum(other.getPktNum());
          }
          if (other.hasBytes()) {
            setBytes(other.getBytes());
          }
          if (other.hasRetransNum()) {
            setRetransNum(other.getRetransNum());
          }
          if (other.hasRetransBytes()) {
            setRetransBytes(other.getRetransBytes());
          }
          if (other.hasRetransAckedNum()) {
            setRetransAckedNum(other.getRetransAckedNum());
          }
          if (other.hasRetransAckedBytes()) {
            setRetransAckedBytes(other.getRetransAckedBytes());
          }
          setUnknownFields(
              getUnknownFields().concat(other.unknownFields));
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int pktNum_ ;
        /**
         * <code>optional uint32 pktNum = 1;</code>
         */
        public boolean hasPktNum() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 pktNum = 1;</code>
         */
        public int getPktNum() {
          return pktNum_;
        }
        /**
         * <code>optional uint32 pktNum = 1;</code>
         */
        public Builder setPktNum(int value) {
          bitField0_ |= 0x00000001;
          pktNum_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 pktNum = 1;</code>
         */
        public Builder clearPktNum() {
          bitField0_ = (bitField0_ & ~0x00000001);
          pktNum_ = 0;
          
          return this;
        }

        private int bytes_ ;
        /**
         * <code>optional uint32 bytes = 2;</code>
         */
        public boolean hasBytes() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 bytes = 2;</code>
         */
        public int getBytes() {
          return bytes_;
        }
        /**
         * <code>optional uint32 bytes = 2;</code>
         */
        public Builder setBytes(int value) {
          bitField0_ |= 0x00000002;
          bytes_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 bytes = 2;</code>
         */
        public Builder clearBytes() {
          bitField0_ = (bitField0_ & ~0x00000002);
          bytes_ = 0;
          
          return this;
        }

        private int retransNum_ ;
        /**
         * <code>optional uint32 retransNum = 3;</code>
         */
        public boolean hasRetransNum() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 retransNum = 3;</code>
         */
        public int getRetransNum() {
          return retransNum_;
        }
        /**
         * <code>optional uint32 retransNum = 3;</code>
         */
        public Builder setRetransNum(int value) {
          bitField0_ |= 0x00000004;
          retransNum_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 retransNum = 3;</code>
         */
        public Builder clearRetransNum() {
          bitField0_ = (bitField0_ & ~0x00000004);
          retransNum_ = 0;
          
          return this;
        }

        private int retransBytes_ ;
        /**
         * <code>optional uint32 retransBytes = 4;</code>
         */
        public boolean hasRetransBytes() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 retransBytes = 4;</code>
         */
        public int getRetransBytes() {
          return retransBytes_;
        }
        /**
         * <code>optional uint32 retransBytes = 4;</code>
         */
        public Builder setRetransBytes(int value) {
          bitField0_ |= 0x00000008;
          retransBytes_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 retransBytes = 4;</code>
         */
        public Builder clearRetransBytes() {
          bitField0_ = (bitField0_ & ~0x00000008);
          retransBytes_ = 0;
          
          return this;
        }

        private int retransAckedNum_ ;
        /**
         * <code>optional uint32 retransAckedNum = 5;</code>
         */
        public boolean hasRetransAckedNum() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 retransAckedNum = 5;</code>
         */
        public int getRetransAckedNum() {
          return retransAckedNum_;
        }
        /**
         * <code>optional uint32 retransAckedNum = 5;</code>
         */
        public Builder setRetransAckedNum(int value) {
          bitField0_ |= 0x00000010;
          retransAckedNum_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 retransAckedNum = 5;</code>
         */
        public Builder clearRetransAckedNum() {
          bitField0_ = (bitField0_ & ~0x00000010);
          retransAckedNum_ = 0;
          
          return this;
        }

        private int retransAckedBytes_ ;
        /**
         * <code>optional uint32 retransAckedBytes = 6;</code>
         */
        public boolean hasRetransAckedBytes() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 retransAckedBytes = 6;</code>
         */
        public int getRetransAckedBytes() {
          return retransAckedBytes_;
        }
        /**
         * <code>optional uint32 retransAckedBytes = 6;</code>
         */
        public Builder setRetransAckedBytes(int value) {
          bitField0_ |= 0x00000020;
          retransAckedBytes_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 retransAckedBytes = 6;</code>
         */
        public Builder clearRetransAckedBytes() {
          bitField0_ = (bitField0_ & ~0x00000020);
          retransAckedBytes_ = 0;
          
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat)
      }

      static {
        defaultInstance = new DirStat(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat)
    }

    private int bitField0_;
    public static final int STARTTIME_FIELD_NUMBER = 1;
    private long startTime_;
    /**
     * <code>required uint64 startTime = 1;</code>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 startTime = 1;</code>
     */
    public long getStartTime() {
      return startTime_;
    }

    public static final int ENDTIME_FIELD_NUMBER = 2;
    private long endTime_;
    /**
     * <code>required uint64 endTime = 2;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 endTime = 2;</code>
     */
    public long getEndTime() {
      return endTime_;
    }

    public static final int SESSIONID_FIELD_NUMBER = 3;
    private int sessionId_;
    /**
     * <code>required uint32 sessionId = 3;</code>
     */
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 sessionId = 3;</code>
     */
    public int getSessionId() {
      return sessionId_;
    }

    public static final int DLSTAT_FIELD_NUMBER = 4;
    private com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat dlStat_;
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
     */
    public boolean hasDlStat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
     */
    public com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat getDlStat() {
      return dlStat_;
    }

    public static final int ULSTAT_FIELD_NUMBER = 5;
    private com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat ulStat_;
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
     */
    public boolean hasUlStat() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
     */
    public com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat getUlStat() {
      return ulStat_;
    }

    private void initFields() {
      startTime_ = 0L;
      endTime_ = 0L;
      sessionId_ = 0;
      dlStat_ = com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance();
      ulStat_ = com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, startTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, endTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, sessionId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, dlStat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, ulStat_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, startTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, endTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sessionId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, dlStat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, ulStat_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpStatNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.TcpStatNotify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpStatNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.zte.netanalysis.capcontrol.Message.TcpStatNotify, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.TcpStatNotify)
        com.zte.netanalysis.capcontrol.Message.TcpStatNotifyOrBuilder {
      // Construct using com.zte.netanalysis.capcontrol.Message.TcpStatNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        sessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dlStat_ = com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        ulStat_ = com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.zte.netanalysis.capcontrol.Message.TcpStatNotify getDefaultInstanceForType() {
        return com.zte.netanalysis.capcontrol.Message.TcpStatNotify.getDefaultInstance();
      }

      public com.zte.netanalysis.capcontrol.Message.TcpStatNotify build() {
        com.zte.netanalysis.capcontrol.Message.TcpStatNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zte.netanalysis.capcontrol.Message.TcpStatNotify buildPartial() {
        com.zte.netanalysis.capcontrol.Message.TcpStatNotify result = new com.zte.netanalysis.capcontrol.Message.TcpStatNotify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sessionId_ = sessionId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dlStat_ = dlStat_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ulStat_ = ulStat_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.TcpStatNotify other) {
        if (other == com.zte.netanalysis.capcontrol.Message.TcpStatNotify.getDefaultInstance()) return this;
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasSessionId()) {
          setSessionId(other.getSessionId());
        }
        if (other.hasDlStat()) {
          mergeDlStat(other.getDlStat());
        }
        if (other.hasUlStat()) {
          mergeUlStat(other.getUlStat());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasEndTime()) {
          
          return false;
        }
        if (!hasSessionId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zte.netanalysis.capcontrol.Message.TcpStatNotify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zte.netanalysis.capcontrol.Message.TcpStatNotify) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long startTime_ ;
      /**
       * <code>required uint64 startTime = 1;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 startTime = 1;</code>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>required uint64 startTime = 1;</code>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000001;
        startTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 startTime = 1;</code>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = 0L;
        
        return this;
      }

      private long endTime_ ;
      /**
       * <code>required uint64 endTime = 2;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 endTime = 2;</code>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>required uint64 endTime = 2;</code>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000002;
        endTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint64 endTime = 2;</code>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = 0L;
        
        return this;
      }

      private int sessionId_ ;
      /**
       * <code>required uint32 sessionId = 3;</code>
       */
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 sessionId = 3;</code>
       */
      public int getSessionId() {
        return sessionId_;
      }
      /**
       * <code>required uint32 sessionId = 3;</code>
       */
      public Builder setSessionId(int value) {
        bitField0_ |= 0x00000004;
        sessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 sessionId = 3;</code>
       */
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sessionId_ = 0;
        
        return this;
      }

      private com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat dlStat_ = com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance();
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
       */
      public boolean hasDlStat() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
       */
      public com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat getDlStat() {
        return dlStat_;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
       */
      public Builder setDlStat(com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        dlStat_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
       */
      public Builder setDlStat(
          com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.Builder builderForValue) {
        dlStat_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
       */
      public Builder mergeDlStat(com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            dlStat_ != com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance()) {
          dlStat_ =
            com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.newBuilder(dlStat_).mergeFrom(value).buildPartial();
        } else {
          dlStat_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat dlStat = 4;</code>
       */
      public Builder clearDlStat() {
        dlStat_ = com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      private com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat ulStat_ = com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance();
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
       */
      public boolean hasUlStat() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
       */
      public com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat getUlStat() {
        return ulStat_;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
       */
      public Builder setUlStat(com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ulStat_ = value;

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
       */
      public Builder setUlStat(
          com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.Builder builderForValue) {
        ulStat_ = builderForValue.build();

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
       */
      public Builder mergeUlStat(com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            ulStat_ != com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance()) {
          ulStat_ =
            com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.newBuilder(ulStat_).mergeFrom(value).buildPartial();
        } else {
          ulStat_ = value;
        }

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpStatNotify.DirStat ulStat = 5;</code>
       */
      public Builder clearUlStat() {
        ulStat_ = com.zte.netanalysis.capcontrol.Message.TcpStatNotify.DirStat.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.TcpStatNotify)
    }

    static {
      defaultInstance = new TcpStatNotify(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.TcpStatNotify)
  }

  public interface TcpSessionNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.TcpSessionNotify)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 sessionId = 1;</code>
     */
    boolean hasSessionId();
    /**
     * <code>required uint32 sessionId = 1;</code>
     */
    int getSessionId();

    /**
     * <code>optional group IpPort = 2 { ... }</code>
     */
    boolean hasIpPort();
    /**
     * <code>optional group IpPort = 2 { ... }</code>
     */
    com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort getIpPort();

    /**
     * <code>optional uint32 rtt = 3;</code>
     */
    boolean hasRtt();
    /**
     * <code>optional uint32 rtt = 3;</code>
     */
    int getRtt();

    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
     */
    boolean hasDlInfo();
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
     */
    com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo getDlInfo();

    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
     */
    boolean hasUlInfo();
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
     */
    com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo getUlInfo();
  }
  /**
   * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpSessionNotify}
   */
  public static final class TcpSessionNotify extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.TcpSessionNotify)
      TcpSessionNotifyOrBuilder {
    // Use TcpSessionNotify.newBuilder() to construct.
    private TcpSessionNotify(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TcpSessionNotify(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final TcpSessionNotify defaultInstance;
    public static TcpSessionNotify getDefaultInstance() {
      return defaultInstance;
    }

    public TcpSessionNotify getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private TcpSessionNotify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sessionId_ = input.readUInt32();
              break;
            }
            case 19: {
              com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = ipPort_.toBuilder();
              }
              ipPort_ = input.readGroup(2, com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.PARSER,
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ipPort_);
                ipPort_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rtt_ = input.readUInt32();
              break;
            }
            case 34: {
              com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = dlInfo_.toBuilder();
              }
              dlInfo_ = input.readMessage(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dlInfo_);
                dlInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = ulInfo_.toBuilder();
              }
              ulInfo_ = input.readMessage(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ulInfo_);
                ulInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TcpSessionNotify> PARSER =
        new com.google.protobuf.AbstractParser<TcpSessionNotify>() {
      public TcpSessionNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TcpSessionNotify(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TcpSessionNotify> getParserForType() {
      return PARSER;
    }

    public interface IpPortOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.TcpSessionNotify.IpPort)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required string localIP = 1;</code>
       */
      boolean hasLocalIP();
      /**
       * <code>required string localIP = 1;</code>
       */
      java.lang.String getLocalIP();
      /**
       * <code>required string localIP = 1;</code>
       */
      com.google.protobuf.ByteString
          getLocalIPBytes();

      /**
       * <code>required string remoteIP = 2;</code>
       */
      boolean hasRemoteIP();
      /**
       * <code>required string remoteIP = 2;</code>
       */
      java.lang.String getRemoteIP();
      /**
       * <code>required string remoteIP = 2;</code>
       */
      com.google.protobuf.ByteString
          getRemoteIPBytes();

      /**
       * <code>required uint32 localPort = 3;</code>
       */
      boolean hasLocalPort();
      /**
       * <code>required uint32 localPort = 3;</code>
       */
      int getLocalPort();

      /**
       * <code>required uint32 remotePort = 4;</code>
       */
      boolean hasRemotePort();
      /**
       * <code>required uint32 remotePort = 4;</code>
       */
      int getRemotePort();
    }
    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpSessionNotify.IpPort}
     */
    public static final class IpPort extends
        com.google.protobuf.GeneratedMessageLite implements
        // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.TcpSessionNotify.IpPort)
        IpPortOrBuilder {
      // Use IpPort.newBuilder() to construct.
      private IpPort(com.google.protobuf.GeneratedMessageLite.Builder builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private IpPort(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

      private static final IpPort defaultInstance;
      public static IpPort getDefaultInstance() {
        return defaultInstance;
      }

      public IpPort getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.ByteString unknownFields;
      private IpPort(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.ByteString.Output unknownFieldsOutput =
            com.google.protobuf.ByteString.newOutput();
        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
            com.google.protobuf.CodedOutputStream.newInstance(
                unknownFieldsOutput);
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                localIP_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                remoteIP_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                localPort_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                remotePort_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          try {
            unknownFieldsCodedOutput.flush();
          } catch (java.io.IOException e) {
          // Should not happen
          } finally {
            unknownFields = unknownFieldsOutput.toByteString();
          }
          makeExtensionsImmutable();
        }
      }
      public static com.google.protobuf.Parser<IpPort> PARSER =
          new com.google.protobuf.AbstractParser<IpPort>() {
        public IpPort parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new IpPort(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<IpPort> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int LOCALIP_FIELD_NUMBER = 1;
      private java.lang.Object localIP_;
      /**
       * <code>required string localIP = 1;</code>
       */
      public boolean hasLocalIP() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string localIP = 1;</code>
       */
      public java.lang.String getLocalIP() {
        java.lang.Object ref = localIP_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            localIP_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string localIP = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLocalIPBytes() {
        java.lang.Object ref = localIP_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          localIP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int REMOTEIP_FIELD_NUMBER = 2;
      private java.lang.Object remoteIP_;
      /**
       * <code>required string remoteIP = 2;</code>
       */
      public boolean hasRemoteIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string remoteIP = 2;</code>
       */
      public java.lang.String getRemoteIP() {
        java.lang.Object ref = remoteIP_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            remoteIP_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string remoteIP = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRemoteIPBytes() {
        java.lang.Object ref = remoteIP_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          remoteIP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOCALPORT_FIELD_NUMBER = 3;
      private int localPort_;
      /**
       * <code>required uint32 localPort = 3;</code>
       */
      public boolean hasLocalPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 localPort = 3;</code>
       */
      public int getLocalPort() {
        return localPort_;
      }

      public static final int REMOTEPORT_FIELD_NUMBER = 4;
      private int remotePort_;
      /**
       * <code>required uint32 remotePort = 4;</code>
       */
      public boolean hasRemotePort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 remotePort = 4;</code>
       */
      public int getRemotePort() {
        return remotePort_;
      }

      private void initFields() {
        localIP_ = "";
        remoteIP_ = "";
        localPort_ = 0;
        remotePort_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasLocalIP()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRemoteIP()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLocalPort()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRemotePort()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getLocalIPBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getRemoteIPBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, localPort_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, remotePort_);
        }
        output.writeRawBytes(unknownFields);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getLocalIPBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getRemoteIPBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, localPort_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, remotePort_);
        }
        size += unknownFields.size();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      /**
       * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpSessionNotify.IpPort}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort, Builder>
          implements
          // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.TcpSessionNotify.IpPort)
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPortOrBuilder {
        // Construct using com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          localIP_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          remoteIP_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          localPort_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          remotePort_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort getDefaultInstanceForType() {
          return com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.getDefaultInstance();
        }

        public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort build() {
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort buildPartial() {
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort result = new com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.localIP_ = localIP_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.remoteIP_ = remoteIP_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.localPort_ = localPort_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.remotePort_ = remotePort_;
          result.bitField0_ = to_bitField0_;
          return result;
        }

        public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort other) {
          if (other == com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.getDefaultInstance()) return this;
          if (other.hasLocalIP()) {
            bitField0_ |= 0x00000001;
            localIP_ = other.localIP_;
            
          }
          if (other.hasRemoteIP()) {
            bitField0_ |= 0x00000002;
            remoteIP_ = other.remoteIP_;
            
          }
          if (other.hasLocalPort()) {
            setLocalPort(other.getLocalPort());
          }
          if (other.hasRemotePort()) {
            setRemotePort(other.getRemotePort());
          }
          setUnknownFields(
              getUnknownFields().concat(other.unknownFields));
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLocalIP()) {
            
            return false;
          }
          if (!hasRemoteIP()) {
            
            return false;
          }
          if (!hasLocalPort()) {
            
            return false;
          }
          if (!hasRemotePort()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object localIP_ = "";
        /**
         * <code>required string localIP = 1;</code>
         */
        public boolean hasLocalIP() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string localIP = 1;</code>
         */
        public java.lang.String getLocalIP() {
          java.lang.Object ref = localIP_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              localIP_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string localIP = 1;</code>
         */
        public com.google.protobuf.ByteString
            getLocalIPBytes() {
          java.lang.Object ref = localIP_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            localIP_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string localIP = 1;</code>
         */
        public Builder setLocalIP(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          localIP_ = value;
          
          return this;
        }
        /**
         * <code>required string localIP = 1;</code>
         */
        public Builder clearLocalIP() {
          bitField0_ = (bitField0_ & ~0x00000001);
          localIP_ = getDefaultInstance().getLocalIP();
          
          return this;
        }
        /**
         * <code>required string localIP = 1;</code>
         */
        public Builder setLocalIPBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          localIP_ = value;
          
          return this;
        }

        private java.lang.Object remoteIP_ = "";
        /**
         * <code>required string remoteIP = 2;</code>
         */
        public boolean hasRemoteIP() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string remoteIP = 2;</code>
         */
        public java.lang.String getRemoteIP() {
          java.lang.Object ref = remoteIP_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              remoteIP_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string remoteIP = 2;</code>
         */
        public com.google.protobuf.ByteString
            getRemoteIPBytes() {
          java.lang.Object ref = remoteIP_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            remoteIP_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string remoteIP = 2;</code>
         */
        public Builder setRemoteIP(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          remoteIP_ = value;
          
          return this;
        }
        /**
         * <code>required string remoteIP = 2;</code>
         */
        public Builder clearRemoteIP() {
          bitField0_ = (bitField0_ & ~0x00000002);
          remoteIP_ = getDefaultInstance().getRemoteIP();
          
          return this;
        }
        /**
         * <code>required string remoteIP = 2;</code>
         */
        public Builder setRemoteIPBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          remoteIP_ = value;
          
          return this;
        }

        private int localPort_ ;
        /**
         * <code>required uint32 localPort = 3;</code>
         */
        public boolean hasLocalPort() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required uint32 localPort = 3;</code>
         */
        public int getLocalPort() {
          return localPort_;
        }
        /**
         * <code>required uint32 localPort = 3;</code>
         */
        public Builder setLocalPort(int value) {
          bitField0_ |= 0x00000004;
          localPort_ = value;
          
          return this;
        }
        /**
         * <code>required uint32 localPort = 3;</code>
         */
        public Builder clearLocalPort() {
          bitField0_ = (bitField0_ & ~0x00000004);
          localPort_ = 0;
          
          return this;
        }

        private int remotePort_ ;
        /**
         * <code>required uint32 remotePort = 4;</code>
         */
        public boolean hasRemotePort() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required uint32 remotePort = 4;</code>
         */
        public int getRemotePort() {
          return remotePort_;
        }
        /**
         * <code>required uint32 remotePort = 4;</code>
         */
        public Builder setRemotePort(int value) {
          bitField0_ |= 0x00000008;
          remotePort_ = value;
          
          return this;
        }
        /**
         * <code>required uint32 remotePort = 4;</code>
         */
        public Builder clearRemotePort() {
          bitField0_ = (bitField0_ & ~0x00000008);
          remotePort_ = 0;
          
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.TcpSessionNotify.IpPort)
      }

      static {
        defaultInstance = new IpPort(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.TcpSessionNotify.IpPort)
    }

    public interface FlowInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional uint64 beginTime = 1;</code>
       */
      boolean hasBeginTime();
      /**
       * <code>optional uint64 beginTime = 1;</code>
       */
      long getBeginTime();

      /**
       * <code>optional uint64 endTime = 2;</code>
       */
      boolean hasEndTime();
      /**
       * <code>optional uint64 endTime = 2;</code>
       */
      long getEndTime();

      /**
       * <code>optional uint64 firstPayloadTime = 3;</code>
       */
      boolean hasFirstPayloadTime();
      /**
       * <code>optional uint64 firstPayloadTime = 3;</code>
       */
      long getFirstPayloadTime();

      /**
       * <code>optional uint64 lastPayloadTime = 4;</code>
       */
      boolean hasLastPayloadTime();
      /**
       * <code>optional uint64 lastPayloadTime = 4;</code>
       */
      long getLastPayloadTime();

      /**
       * <code>optional uint32 totalPktNum = 5;</code>
       */
      boolean hasTotalPktNum();
      /**
       * <code>optional uint32 totalPktNum = 5;</code>
       */
      int getTotalPktNum();

      /**
       * <code>optional uint32 totalBytes = 6;</code>
       */
      boolean hasTotalBytes();
      /**
       * <code>optional uint32 totalBytes = 6;</code>
       */
      int getTotalBytes();

      /**
       * <code>optional uint32 retransPktNum = 7;</code>
       */
      boolean hasRetransPktNum();
      /**
       * <code>optional uint32 retransPktNum = 7;</code>
       */
      int getRetransPktNum();

      /**
       * <code>optional uint32 retransBytes = 8;</code>
       */
      boolean hasRetransBytes();
      /**
       * <code>optional uint32 retransBytes = 8;</code>
       */
      int getRetransBytes();

      /**
       * <code>optional uint32 retransAckedNum = 9;</code>
       */
      boolean hasRetransAckedNum();
      /**
       * <code>optional uint32 retransAckedNum = 9;</code>
       */
      int getRetransAckedNum();

      /**
       * <code>optional uint32 retransAckedBytes = 10;</code>
       */
      boolean hasRetransAckedBytes();
      /**
       * <code>optional uint32 retransAckedBytes = 10;</code>
       */
      int getRetransAckedBytes();

      /**
       * <code>optional uint32 fastRetransNum = 11;</code>
       */
      boolean hasFastRetransNum();
      /**
       * <code>optional uint32 fastRetransNum = 11;</code>
       */
      int getFastRetransNum();

      /**
       * <code>optional uint32 fastRetransBytes = 12;</code>
       */
      boolean hasFastRetransBytes();
      /**
       * <code>optional uint32 fastRetransBytes = 12;</code>
       */
      int getFastRetransBytes();

      /**
       * <code>optional uint32 disorderPktNum = 13;</code>
       */
      boolean hasDisorderPktNum();
      /**
       * <code>optional uint32 disorderPktNum = 13;</code>
       */
      int getDisorderPktNum();

      /**
       * <code>optional uint32 disorderBytes = 14;</code>
       */
      boolean hasDisorderBytes();
      /**
       * <code>optional uint32 disorderBytes = 14;</code>
       */
      int getDisorderBytes();

      /**
       * <code>optional uint32 dupAckNum = 15;</code>
       */
      boolean hasDupAckNum();
      /**
       * <code>optional uint32 dupAckNum = 15;</code>
       */
      int getDupAckNum();
    }
    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo}
     */
    public static final class FlowInfo extends
        com.google.protobuf.GeneratedMessageLite implements
        // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo)
        FlowInfoOrBuilder {
      // Use FlowInfo.newBuilder() to construct.
      private FlowInfo(com.google.protobuf.GeneratedMessageLite.Builder builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FlowInfo(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

      private static final FlowInfo defaultInstance;
      public static FlowInfo getDefaultInstance() {
        return defaultInstance;
      }

      public FlowInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.ByteString unknownFields;
      private FlowInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.ByteString.Output unknownFieldsOutput =
            com.google.protobuf.ByteString.newOutput();
        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
            com.google.protobuf.CodedOutputStream.newInstance(
                unknownFieldsOutput);
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                beginTime_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                endTime_ = input.readUInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                firstPayloadTime_ = input.readUInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                lastPayloadTime_ = input.readUInt64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                totalPktNum_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                totalBytes_ = input.readUInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                retransPktNum_ = input.readUInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                retransBytes_ = input.readUInt32();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                retransAckedNum_ = input.readUInt32();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                retransAckedBytes_ = input.readUInt32();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                fastRetransNum_ = input.readUInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000800;
                fastRetransBytes_ = input.readUInt32();
                break;
              }
              case 104: {
                bitField0_ |= 0x00001000;
                disorderPktNum_ = input.readUInt32();
                break;
              }
              case 112: {
                bitField0_ |= 0x00002000;
                disorderBytes_ = input.readUInt32();
                break;
              }
              case 120: {
                bitField0_ |= 0x00004000;
                dupAckNum_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          try {
            unknownFieldsCodedOutput.flush();
          } catch (java.io.IOException e) {
          // Should not happen
          } finally {
            unknownFields = unknownFieldsOutput.toByteString();
          }
          makeExtensionsImmutable();
        }
      }
      public static com.google.protobuf.Parser<FlowInfo> PARSER =
          new com.google.protobuf.AbstractParser<FlowInfo>() {
        public FlowInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FlowInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<FlowInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int BEGINTIME_FIELD_NUMBER = 1;
      private long beginTime_;
      /**
       * <code>optional uint64 beginTime = 1;</code>
       */
      public boolean hasBeginTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 beginTime = 1;</code>
       */
      public long getBeginTime() {
        return beginTime_;
      }

      public static final int ENDTIME_FIELD_NUMBER = 2;
      private long endTime_;
      /**
       * <code>optional uint64 endTime = 2;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 endTime = 2;</code>
       */
      public long getEndTime() {
        return endTime_;
      }

      public static final int FIRSTPAYLOADTIME_FIELD_NUMBER = 3;
      private long firstPayloadTime_;
      /**
       * <code>optional uint64 firstPayloadTime = 3;</code>
       */
      public boolean hasFirstPayloadTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 firstPayloadTime = 3;</code>
       */
      public long getFirstPayloadTime() {
        return firstPayloadTime_;
      }

      public static final int LASTPAYLOADTIME_FIELD_NUMBER = 4;
      private long lastPayloadTime_;
      /**
       * <code>optional uint64 lastPayloadTime = 4;</code>
       */
      public boolean hasLastPayloadTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 lastPayloadTime = 4;</code>
       */
      public long getLastPayloadTime() {
        return lastPayloadTime_;
      }

      public static final int TOTALPKTNUM_FIELD_NUMBER = 5;
      private int totalPktNum_;
      /**
       * <code>optional uint32 totalPktNum = 5;</code>
       */
      public boolean hasTotalPktNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 totalPktNum = 5;</code>
       */
      public int getTotalPktNum() {
        return totalPktNum_;
      }

      public static final int TOTALBYTES_FIELD_NUMBER = 6;
      private int totalBytes_;
      /**
       * <code>optional uint32 totalBytes = 6;</code>
       */
      public boolean hasTotalBytes() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 totalBytes = 6;</code>
       */
      public int getTotalBytes() {
        return totalBytes_;
      }

      public static final int RETRANSPKTNUM_FIELD_NUMBER = 7;
      private int retransPktNum_;
      /**
       * <code>optional uint32 retransPktNum = 7;</code>
       */
      public boolean hasRetransPktNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 retransPktNum = 7;</code>
       */
      public int getRetransPktNum() {
        return retransPktNum_;
      }

      public static final int RETRANSBYTES_FIELD_NUMBER = 8;
      private int retransBytes_;
      /**
       * <code>optional uint32 retransBytes = 8;</code>
       */
      public boolean hasRetransBytes() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 retransBytes = 8;</code>
       */
      public int getRetransBytes() {
        return retransBytes_;
      }

      public static final int RETRANSACKEDNUM_FIELD_NUMBER = 9;
      private int retransAckedNum_;
      /**
       * <code>optional uint32 retransAckedNum = 9;</code>
       */
      public boolean hasRetransAckedNum() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 retransAckedNum = 9;</code>
       */
      public int getRetransAckedNum() {
        return retransAckedNum_;
      }

      public static final int RETRANSACKEDBYTES_FIELD_NUMBER = 10;
      private int retransAckedBytes_;
      /**
       * <code>optional uint32 retransAckedBytes = 10;</code>
       */
      public boolean hasRetransAckedBytes() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 retransAckedBytes = 10;</code>
       */
      public int getRetransAckedBytes() {
        return retransAckedBytes_;
      }

      public static final int FASTRETRANSNUM_FIELD_NUMBER = 11;
      private int fastRetransNum_;
      /**
       * <code>optional uint32 fastRetransNum = 11;</code>
       */
      public boolean hasFastRetransNum() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 fastRetransNum = 11;</code>
       */
      public int getFastRetransNum() {
        return fastRetransNum_;
      }

      public static final int FASTRETRANSBYTES_FIELD_NUMBER = 12;
      private int fastRetransBytes_;
      /**
       * <code>optional uint32 fastRetransBytes = 12;</code>
       */
      public boolean hasFastRetransBytes() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 fastRetransBytes = 12;</code>
       */
      public int getFastRetransBytes() {
        return fastRetransBytes_;
      }

      public static final int DISORDERPKTNUM_FIELD_NUMBER = 13;
      private int disorderPktNum_;
      /**
       * <code>optional uint32 disorderPktNum = 13;</code>
       */
      public boolean hasDisorderPktNum() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 disorderPktNum = 13;</code>
       */
      public int getDisorderPktNum() {
        return disorderPktNum_;
      }

      public static final int DISORDERBYTES_FIELD_NUMBER = 14;
      private int disorderBytes_;
      /**
       * <code>optional uint32 disorderBytes = 14;</code>
       */
      public boolean hasDisorderBytes() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 disorderBytes = 14;</code>
       */
      public int getDisorderBytes() {
        return disorderBytes_;
      }

      public static final int DUPACKNUM_FIELD_NUMBER = 15;
      private int dupAckNum_;
      /**
       * <code>optional uint32 dupAckNum = 15;</code>
       */
      public boolean hasDupAckNum() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 dupAckNum = 15;</code>
       */
      public int getDupAckNum() {
        return dupAckNum_;
      }

      private void initFields() {
        beginTime_ = 0L;
        endTime_ = 0L;
        firstPayloadTime_ = 0L;
        lastPayloadTime_ = 0L;
        totalPktNum_ = 0;
        totalBytes_ = 0;
        retransPktNum_ = 0;
        retransBytes_ = 0;
        retransAckedNum_ = 0;
        retransAckedBytes_ = 0;
        fastRetransNum_ = 0;
        fastRetransBytes_ = 0;
        disorderPktNum_ = 0;
        disorderBytes_ = 0;
        dupAckNum_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, beginTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, endTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, firstPayloadTime_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, lastPayloadTime_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, totalPktNum_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, totalBytes_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, retransPktNum_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(8, retransBytes_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeUInt32(9, retransAckedNum_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeUInt32(10, retransAckedBytes_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeUInt32(11, fastRetransNum_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeUInt32(12, fastRetransBytes_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeUInt32(13, disorderPktNum_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeUInt32(14, disorderBytes_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          output.writeUInt32(15, dupAckNum_);
        }
        output.writeRawBytes(unknownFields);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, beginTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, endTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, firstPayloadTime_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, lastPayloadTime_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, totalPktNum_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, totalBytes_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, retransPktNum_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, retransBytes_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, retransAckedNum_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, retransAckedBytes_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, fastRetransNum_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, fastRetransBytes_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(13, disorderPktNum_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(14, disorderBytes_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(15, dupAckNum_);
        }
        size += unknownFields.size();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      /**
       * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo, Builder>
          implements
          // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo)
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfoOrBuilder {
        // Construct using com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          beginTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          endTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          firstPayloadTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          lastPayloadTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          totalPktNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          totalBytes_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          retransPktNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          retransBytes_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          retransAckedNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          retransAckedBytes_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          fastRetransNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          fastRetransBytes_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          disorderPktNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00001000);
          disorderBytes_ = 0;
          bitField0_ = (bitField0_ & ~0x00002000);
          dupAckNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00004000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo getDefaultInstanceForType() {
          return com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance();
        }

        public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo build() {
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo buildPartial() {
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo result = new com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.beginTime_ = beginTime_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.endTime_ = endTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.firstPayloadTime_ = firstPayloadTime_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.lastPayloadTime_ = lastPayloadTime_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.totalPktNum_ = totalPktNum_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.totalBytes_ = totalBytes_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.retransPktNum_ = retransPktNum_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.retransBytes_ = retransBytes_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.retransAckedNum_ = retransAckedNum_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.retransAckedBytes_ = retransAckedBytes_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.fastRetransNum_ = fastRetransNum_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.fastRetransBytes_ = fastRetransBytes_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.disorderPktNum_ = disorderPktNum_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.disorderBytes_ = disorderBytes_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00004000;
          }
          result.dupAckNum_ = dupAckNum_;
          result.bitField0_ = to_bitField0_;
          return result;
        }

        public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo other) {
          if (other == com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance()) return this;
          if (other.hasBeginTime()) {
            setBeginTime(other.getBeginTime());
          }
          if (other.hasEndTime()) {
            setEndTime(other.getEndTime());
          }
          if (other.hasFirstPayloadTime()) {
            setFirstPayloadTime(other.getFirstPayloadTime());
          }
          if (other.hasLastPayloadTime()) {
            setLastPayloadTime(other.getLastPayloadTime());
          }
          if (other.hasTotalPktNum()) {
            setTotalPktNum(other.getTotalPktNum());
          }
          if (other.hasTotalBytes()) {
            setTotalBytes(other.getTotalBytes());
          }
          if (other.hasRetransPktNum()) {
            setRetransPktNum(other.getRetransPktNum());
          }
          if (other.hasRetransBytes()) {
            setRetransBytes(other.getRetransBytes());
          }
          if (other.hasRetransAckedNum()) {
            setRetransAckedNum(other.getRetransAckedNum());
          }
          if (other.hasRetransAckedBytes()) {
            setRetransAckedBytes(other.getRetransAckedBytes());
          }
          if (other.hasFastRetransNum()) {
            setFastRetransNum(other.getFastRetransNum());
          }
          if (other.hasFastRetransBytes()) {
            setFastRetransBytes(other.getFastRetransBytes());
          }
          if (other.hasDisorderPktNum()) {
            setDisorderPktNum(other.getDisorderPktNum());
          }
          if (other.hasDisorderBytes()) {
            setDisorderBytes(other.getDisorderBytes());
          }
          if (other.hasDupAckNum()) {
            setDupAckNum(other.getDupAckNum());
          }
          setUnknownFields(
              getUnknownFields().concat(other.unknownFields));
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long beginTime_ ;
        /**
         * <code>optional uint64 beginTime = 1;</code>
         */
        public boolean hasBeginTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 beginTime = 1;</code>
         */
        public long getBeginTime() {
          return beginTime_;
        }
        /**
         * <code>optional uint64 beginTime = 1;</code>
         */
        public Builder setBeginTime(long value) {
          bitField0_ |= 0x00000001;
          beginTime_ = value;
          
          return this;
        }
        /**
         * <code>optional uint64 beginTime = 1;</code>
         */
        public Builder clearBeginTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          beginTime_ = 0L;
          
          return this;
        }

        private long endTime_ ;
        /**
         * <code>optional uint64 endTime = 2;</code>
         */
        public boolean hasEndTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 endTime = 2;</code>
         */
        public long getEndTime() {
          return endTime_;
        }
        /**
         * <code>optional uint64 endTime = 2;</code>
         */
        public Builder setEndTime(long value) {
          bitField0_ |= 0x00000002;
          endTime_ = value;
          
          return this;
        }
        /**
         * <code>optional uint64 endTime = 2;</code>
         */
        public Builder clearEndTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          endTime_ = 0L;
          
          return this;
        }

        private long firstPayloadTime_ ;
        /**
         * <code>optional uint64 firstPayloadTime = 3;</code>
         */
        public boolean hasFirstPayloadTime() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 firstPayloadTime = 3;</code>
         */
        public long getFirstPayloadTime() {
          return firstPayloadTime_;
        }
        /**
         * <code>optional uint64 firstPayloadTime = 3;</code>
         */
        public Builder setFirstPayloadTime(long value) {
          bitField0_ |= 0x00000004;
          firstPayloadTime_ = value;
          
          return this;
        }
        /**
         * <code>optional uint64 firstPayloadTime = 3;</code>
         */
        public Builder clearFirstPayloadTime() {
          bitField0_ = (bitField0_ & ~0x00000004);
          firstPayloadTime_ = 0L;
          
          return this;
        }

        private long lastPayloadTime_ ;
        /**
         * <code>optional uint64 lastPayloadTime = 4;</code>
         */
        public boolean hasLastPayloadTime() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 lastPayloadTime = 4;</code>
         */
        public long getLastPayloadTime() {
          return lastPayloadTime_;
        }
        /**
         * <code>optional uint64 lastPayloadTime = 4;</code>
         */
        public Builder setLastPayloadTime(long value) {
          bitField0_ |= 0x00000008;
          lastPayloadTime_ = value;
          
          return this;
        }
        /**
         * <code>optional uint64 lastPayloadTime = 4;</code>
         */
        public Builder clearLastPayloadTime() {
          bitField0_ = (bitField0_ & ~0x00000008);
          lastPayloadTime_ = 0L;
          
          return this;
        }

        private int totalPktNum_ ;
        /**
         * <code>optional uint32 totalPktNum = 5;</code>
         */
        public boolean hasTotalPktNum() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 totalPktNum = 5;</code>
         */
        public int getTotalPktNum() {
          return totalPktNum_;
        }
        /**
         * <code>optional uint32 totalPktNum = 5;</code>
         */
        public Builder setTotalPktNum(int value) {
          bitField0_ |= 0x00000010;
          totalPktNum_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 totalPktNum = 5;</code>
         */
        public Builder clearTotalPktNum() {
          bitField0_ = (bitField0_ & ~0x00000010);
          totalPktNum_ = 0;
          
          return this;
        }

        private int totalBytes_ ;
        /**
         * <code>optional uint32 totalBytes = 6;</code>
         */
        public boolean hasTotalBytes() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 totalBytes = 6;</code>
         */
        public int getTotalBytes() {
          return totalBytes_;
        }
        /**
         * <code>optional uint32 totalBytes = 6;</code>
         */
        public Builder setTotalBytes(int value) {
          bitField0_ |= 0x00000020;
          totalBytes_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 totalBytes = 6;</code>
         */
        public Builder clearTotalBytes() {
          bitField0_ = (bitField0_ & ~0x00000020);
          totalBytes_ = 0;
          
          return this;
        }

        private int retransPktNum_ ;
        /**
         * <code>optional uint32 retransPktNum = 7;</code>
         */
        public boolean hasRetransPktNum() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 retransPktNum = 7;</code>
         */
        public int getRetransPktNum() {
          return retransPktNum_;
        }
        /**
         * <code>optional uint32 retransPktNum = 7;</code>
         */
        public Builder setRetransPktNum(int value) {
          bitField0_ |= 0x00000040;
          retransPktNum_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 retransPktNum = 7;</code>
         */
        public Builder clearRetransPktNum() {
          bitField0_ = (bitField0_ & ~0x00000040);
          retransPktNum_ = 0;
          
          return this;
        }

        private int retransBytes_ ;
        /**
         * <code>optional uint32 retransBytes = 8;</code>
         */
        public boolean hasRetransBytes() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint32 retransBytes = 8;</code>
         */
        public int getRetransBytes() {
          return retransBytes_;
        }
        /**
         * <code>optional uint32 retransBytes = 8;</code>
         */
        public Builder setRetransBytes(int value) {
          bitField0_ |= 0x00000080;
          retransBytes_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 retransBytes = 8;</code>
         */
        public Builder clearRetransBytes() {
          bitField0_ = (bitField0_ & ~0x00000080);
          retransBytes_ = 0;
          
          return this;
        }

        private int retransAckedNum_ ;
        /**
         * <code>optional uint32 retransAckedNum = 9;</code>
         */
        public boolean hasRetransAckedNum() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 retransAckedNum = 9;</code>
         */
        public int getRetransAckedNum() {
          return retransAckedNum_;
        }
        /**
         * <code>optional uint32 retransAckedNum = 9;</code>
         */
        public Builder setRetransAckedNum(int value) {
          bitField0_ |= 0x00000100;
          retransAckedNum_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 retransAckedNum = 9;</code>
         */
        public Builder clearRetransAckedNum() {
          bitField0_ = (bitField0_ & ~0x00000100);
          retransAckedNum_ = 0;
          
          return this;
        }

        private int retransAckedBytes_ ;
        /**
         * <code>optional uint32 retransAckedBytes = 10;</code>
         */
        public boolean hasRetransAckedBytes() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 retransAckedBytes = 10;</code>
         */
        public int getRetransAckedBytes() {
          return retransAckedBytes_;
        }
        /**
         * <code>optional uint32 retransAckedBytes = 10;</code>
         */
        public Builder setRetransAckedBytes(int value) {
          bitField0_ |= 0x00000200;
          retransAckedBytes_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 retransAckedBytes = 10;</code>
         */
        public Builder clearRetransAckedBytes() {
          bitField0_ = (bitField0_ & ~0x00000200);
          retransAckedBytes_ = 0;
          
          return this;
        }

        private int fastRetransNum_ ;
        /**
         * <code>optional uint32 fastRetransNum = 11;</code>
         */
        public boolean hasFastRetransNum() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional uint32 fastRetransNum = 11;</code>
         */
        public int getFastRetransNum() {
          return fastRetransNum_;
        }
        /**
         * <code>optional uint32 fastRetransNum = 11;</code>
         */
        public Builder setFastRetransNum(int value) {
          bitField0_ |= 0x00000400;
          fastRetransNum_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 fastRetransNum = 11;</code>
         */
        public Builder clearFastRetransNum() {
          bitField0_ = (bitField0_ & ~0x00000400);
          fastRetransNum_ = 0;
          
          return this;
        }

        private int fastRetransBytes_ ;
        /**
         * <code>optional uint32 fastRetransBytes = 12;</code>
         */
        public boolean hasFastRetransBytes() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional uint32 fastRetransBytes = 12;</code>
         */
        public int getFastRetransBytes() {
          return fastRetransBytes_;
        }
        /**
         * <code>optional uint32 fastRetransBytes = 12;</code>
         */
        public Builder setFastRetransBytes(int value) {
          bitField0_ |= 0x00000800;
          fastRetransBytes_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 fastRetransBytes = 12;</code>
         */
        public Builder clearFastRetransBytes() {
          bitField0_ = (bitField0_ & ~0x00000800);
          fastRetransBytes_ = 0;
          
          return this;
        }

        private int disorderPktNum_ ;
        /**
         * <code>optional uint32 disorderPktNum = 13;</code>
         */
        public boolean hasDisorderPktNum() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional uint32 disorderPktNum = 13;</code>
         */
        public int getDisorderPktNum() {
          return disorderPktNum_;
        }
        /**
         * <code>optional uint32 disorderPktNum = 13;</code>
         */
        public Builder setDisorderPktNum(int value) {
          bitField0_ |= 0x00001000;
          disorderPktNum_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 disorderPktNum = 13;</code>
         */
        public Builder clearDisorderPktNum() {
          bitField0_ = (bitField0_ & ~0x00001000);
          disorderPktNum_ = 0;
          
          return this;
        }

        private int disorderBytes_ ;
        /**
         * <code>optional uint32 disorderBytes = 14;</code>
         */
        public boolean hasDisorderBytes() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional uint32 disorderBytes = 14;</code>
         */
        public int getDisorderBytes() {
          return disorderBytes_;
        }
        /**
         * <code>optional uint32 disorderBytes = 14;</code>
         */
        public Builder setDisorderBytes(int value) {
          bitField0_ |= 0x00002000;
          disorderBytes_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 disorderBytes = 14;</code>
         */
        public Builder clearDisorderBytes() {
          bitField0_ = (bitField0_ & ~0x00002000);
          disorderBytes_ = 0;
          
          return this;
        }

        private int dupAckNum_ ;
        /**
         * <code>optional uint32 dupAckNum = 15;</code>
         */
        public boolean hasDupAckNum() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional uint32 dupAckNum = 15;</code>
         */
        public int getDupAckNum() {
          return dupAckNum_;
        }
        /**
         * <code>optional uint32 dupAckNum = 15;</code>
         */
        public Builder setDupAckNum(int value) {
          bitField0_ |= 0x00004000;
          dupAckNum_ = value;
          
          return this;
        }
        /**
         * <code>optional uint32 dupAckNum = 15;</code>
         */
        public Builder clearDupAckNum() {
          bitField0_ = (bitField0_ & ~0x00004000);
          dupAckNum_ = 0;
          
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo)
      }

      static {
        defaultInstance = new FlowInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo)
    }

    private int bitField0_;
    public static final int SESSIONID_FIELD_NUMBER = 1;
    private int sessionId_;
    /**
     * <code>required uint32 sessionId = 1;</code>
     */
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 sessionId = 1;</code>
     */
    public int getSessionId() {
      return sessionId_;
    }

    public static final int IPPORT_FIELD_NUMBER = 2;
    private com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort ipPort_;
    /**
     * <code>optional group IpPort = 2 { ... }</code>
     */
    public boolean hasIpPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional group IpPort = 2 { ... }</code>
     */
    public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort getIpPort() {
      return ipPort_;
    }

    public static final int RTT_FIELD_NUMBER = 3;
    private int rtt_;
    /**
     * <code>optional uint32 rtt = 3;</code>
     */
    public boolean hasRtt() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 rtt = 3;</code>
     */
    public int getRtt() {
      return rtt_;
    }

    public static final int DLINFO_FIELD_NUMBER = 4;
    private com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo dlInfo_;
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
     */
    public boolean hasDlInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
     */
    public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo getDlInfo() {
      return dlInfo_;
    }

    public static final int ULINFO_FIELD_NUMBER = 5;
    private com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo ulInfo_;
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
     */
    public boolean hasUlInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
     */
    public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo getUlInfo() {
      return ulInfo_;
    }

    private void initFields() {
      sessionId_ = 0;
      ipPort_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.getDefaultInstance();
      rtt_ = 0;
      dlInfo_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance();
      ulInfo_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasIpPort()) {
        if (!getIpPort().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, sessionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeGroup(2, ipPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, rtt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, dlInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, ulInfo_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sessionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(2, ipPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, rtt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, dlInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, ulInfo_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.TcpSessionNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.TcpSessionNotify)
        com.zte.netanalysis.capcontrol.Message.TcpSessionNotifyOrBuilder {
      // Construct using com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ipPort_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        rtt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dlInfo_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        ulInfo_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify getDefaultInstanceForType() {
        return com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.getDefaultInstance();
      }

      public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify build() {
        com.zte.netanalysis.capcontrol.Message.TcpSessionNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify buildPartial() {
        com.zte.netanalysis.capcontrol.Message.TcpSessionNotify result = new com.zte.netanalysis.capcontrol.Message.TcpSessionNotify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sessionId_ = sessionId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ipPort_ = ipPort_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rtt_ = rtt_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dlInfo_ = dlInfo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ulInfo_ = ulInfo_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify other) {
        if (other == com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.getDefaultInstance()) return this;
        if (other.hasSessionId()) {
          setSessionId(other.getSessionId());
        }
        if (other.hasIpPort()) {
          mergeIpPort(other.getIpPort());
        }
        if (other.hasRtt()) {
          setRtt(other.getRtt());
        }
        if (other.hasDlInfo()) {
          mergeDlInfo(other.getDlInfo());
        }
        if (other.hasUlInfo()) {
          mergeUlInfo(other.getUlInfo());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSessionId()) {
          
          return false;
        }
        if (hasIpPort()) {
          if (!getIpPort().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zte.netanalysis.capcontrol.Message.TcpSessionNotify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zte.netanalysis.capcontrol.Message.TcpSessionNotify) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sessionId_ ;
      /**
       * <code>required uint32 sessionId = 1;</code>
       */
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 sessionId = 1;</code>
       */
      public int getSessionId() {
        return sessionId_;
      }
      /**
       * <code>required uint32 sessionId = 1;</code>
       */
      public Builder setSessionId(int value) {
        bitField0_ |= 0x00000001;
        sessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 sessionId = 1;</code>
       */
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sessionId_ = 0;
        
        return this;
      }

      private com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort ipPort_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.getDefaultInstance();
      /**
       * <code>optional group IpPort = 2 { ... }</code>
       */
      public boolean hasIpPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional group IpPort = 2 { ... }</code>
       */
      public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort getIpPort() {
        return ipPort_;
      }
      /**
       * <code>optional group IpPort = 2 { ... }</code>
       */
      public Builder setIpPort(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ipPort_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional group IpPort = 2 { ... }</code>
       */
      public Builder setIpPort(
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.Builder builderForValue) {
        ipPort_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional group IpPort = 2 { ... }</code>
       */
      public Builder mergeIpPort(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            ipPort_ != com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.getDefaultInstance()) {
          ipPort_ =
            com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.newBuilder(ipPort_).mergeFrom(value).buildPartial();
        } else {
          ipPort_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional group IpPort = 2 { ... }</code>
       */
      public Builder clearIpPort() {
        ipPort_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.IpPort.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      private int rtt_ ;
      /**
       * <code>optional uint32 rtt = 3;</code>
       */
      public boolean hasRtt() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 rtt = 3;</code>
       */
      public int getRtt() {
        return rtt_;
      }
      /**
       * <code>optional uint32 rtt = 3;</code>
       */
      public Builder setRtt(int value) {
        bitField0_ |= 0x00000004;
        rtt_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 rtt = 3;</code>
       */
      public Builder clearRtt() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rtt_ = 0;
        
        return this;
      }

      private com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo dlInfo_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance();
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
       */
      public boolean hasDlInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
       */
      public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo getDlInfo() {
        return dlInfo_;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
       */
      public Builder setDlInfo(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        dlInfo_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
       */
      public Builder setDlInfo(
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.Builder builderForValue) {
        dlInfo_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
       */
      public Builder mergeDlInfo(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            dlInfo_ != com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance()) {
          dlInfo_ =
            com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.newBuilder(dlInfo_).mergeFrom(value).buildPartial();
        } else {
          dlInfo_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo dlInfo = 4;</code>
       */
      public Builder clearDlInfo() {
        dlInfo_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      private com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo ulInfo_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance();
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
       */
      public boolean hasUlInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
       */
      public com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo getUlInfo() {
        return ulInfo_;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
       */
      public Builder setUlInfo(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ulInfo_ = value;

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
       */
      public Builder setUlInfo(
          com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.Builder builderForValue) {
        ulInfo_ = builderForValue.build();

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
       */
      public Builder mergeUlInfo(com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            ulInfo_ != com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance()) {
          ulInfo_ =
            com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.newBuilder(ulInfo_).mergeFrom(value).buildPartial();
        } else {
          ulInfo_ = value;
        }

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.zte.netanalysis.capcontrol.TcpSessionNotify.FlowInfo ulInfo = 5;</code>
       */
      public Builder clearUlInfo() {
        ulInfo_ = com.zte.netanalysis.capcontrol.Message.TcpSessionNotify.FlowInfo.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.TcpSessionNotify)
    }

    static {
      defaultInstance = new TcpSessionNotify(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.TcpSessionNotify)
  }

  public interface DnsTransNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.zte.netanalysis.capcontrol.DnsTransNotify)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint32 retryCount = 1;</code>
     */
    boolean hasRetryCount();
    /**
     * <code>optional uint32 retryCount = 1;</code>
     */
    int getRetryCount();

    /**
     * <code>optional uint64 queryTime = 2;</code>
     */
    boolean hasQueryTime();
    /**
     * <code>optional uint64 queryTime = 2;</code>
     */
    long getQueryTime();

    /**
     * <code>optional uint64 answerTime = 3;</code>
     */
    boolean hasAnswerTime();
    /**
     * <code>optional uint64 answerTime = 3;</code>
     */
    long getAnswerTime();

    /**
     * <code>optional string dnsServerIp = 4;</code>
     */
    boolean hasDnsServerIp();
    /**
     * <code>optional string dnsServerIp = 4;</code>
     */
    java.lang.String getDnsServerIp();
    /**
     * <code>optional string dnsServerIp = 4;</code>
     */
    com.google.protobuf.ByteString
        getDnsServerIpBytes();

    /**
     * <code>optional string hostName = 5;</code>
     */
    boolean hasHostName();
    /**
     * <code>optional string hostName = 5;</code>
     */
    java.lang.String getHostName();
    /**
     * <code>optional string hostName = 5;</code>
     */
    com.google.protobuf.ByteString
        getHostNameBytes();

    /**
     * <code>optional string ipAddr = 6;</code>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string ipAddr = 6;</code>
     */
    java.lang.String getIpAddr();
    /**
     * <code>optional string ipAddr = 6;</code>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();
  }
  /**
   * Protobuf type {@code com.zte.netanalysis.capcontrol.DnsTransNotify}
   */
  public static final class DnsTransNotify extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:com.zte.netanalysis.capcontrol.DnsTransNotify)
      DnsTransNotifyOrBuilder {
    // Use DnsTransNotify.newBuilder() to construct.
    private DnsTransNotify(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DnsTransNotify(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final DnsTransNotify defaultInstance;
    public static DnsTransNotify getDefaultInstance() {
      return defaultInstance;
    }

    public DnsTransNotify getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private DnsTransNotify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retryCount_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              queryTime_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              answerTime_ = input.readUInt64();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              dnsServerIp_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              hostName_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              ipAddr_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<DnsTransNotify> PARSER =
        new com.google.protobuf.AbstractParser<DnsTransNotify>() {
      public DnsTransNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DnsTransNotify(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DnsTransNotify> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETRYCOUNT_FIELD_NUMBER = 1;
    private int retryCount_;
    /**
     * <code>optional uint32 retryCount = 1;</code>
     */
    public boolean hasRetryCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 retryCount = 1;</code>
     */
    public int getRetryCount() {
      return retryCount_;
    }

    public static final int QUERYTIME_FIELD_NUMBER = 2;
    private long queryTime_;
    /**
     * <code>optional uint64 queryTime = 2;</code>
     */
    public boolean hasQueryTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 queryTime = 2;</code>
     */
    public long getQueryTime() {
      return queryTime_;
    }

    public static final int ANSWERTIME_FIELD_NUMBER = 3;
    private long answerTime_;
    /**
     * <code>optional uint64 answerTime = 3;</code>
     */
    public boolean hasAnswerTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 answerTime = 3;</code>
     */
    public long getAnswerTime() {
      return answerTime_;
    }

    public static final int DNSSERVERIP_FIELD_NUMBER = 4;
    private java.lang.Object dnsServerIp_;
    /**
     * <code>optional string dnsServerIp = 4;</code>
     */
    public boolean hasDnsServerIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string dnsServerIp = 4;</code>
     */
    public java.lang.String getDnsServerIp() {
      java.lang.Object ref = dnsServerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dnsServerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dnsServerIp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDnsServerIpBytes() {
      java.lang.Object ref = dnsServerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dnsServerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOSTNAME_FIELD_NUMBER = 5;
    private java.lang.Object hostName_;
    /**
     * <code>optional string hostName = 5;</code>
     */
    public boolean hasHostName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string hostName = 5;</code>
     */
    public java.lang.String getHostName() {
      java.lang.Object ref = hostName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hostName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getHostNameBytes() {
      java.lang.Object ref = hostName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IPADDR_FIELD_NUMBER = 6;
    private java.lang.Object ipAddr_;
    /**
     * <code>optional string ipAddr = 6;</code>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string ipAddr = 6;</code>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ipAddr = 6;</code>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      retryCount_ = 0;
      queryTime_ = 0L;
      answerTime_ = 0L;
      dnsServerIp_ = "";
      hostName_ = "";
      ipAddr_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retryCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, queryTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, answerTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getDnsServerIpBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getHostNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getIpAddrBytes());
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retryCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, queryTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, answerTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDnsServerIpBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getHostNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getIpAddrBytes());
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zte.netanalysis.capcontrol.Message.DnsTransNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zte.netanalysis.capcontrol.Message.DnsTransNotify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code com.zte.netanalysis.capcontrol.DnsTransNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.zte.netanalysis.capcontrol.Message.DnsTransNotify, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.zte.netanalysis.capcontrol.DnsTransNotify)
        com.zte.netanalysis.capcontrol.Message.DnsTransNotifyOrBuilder {
      // Construct using com.zte.netanalysis.capcontrol.Message.DnsTransNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retryCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        queryTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        answerTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        dnsServerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        hostName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.zte.netanalysis.capcontrol.Message.DnsTransNotify getDefaultInstanceForType() {
        return com.zte.netanalysis.capcontrol.Message.DnsTransNotify.getDefaultInstance();
      }

      public com.zte.netanalysis.capcontrol.Message.DnsTransNotify build() {
        com.zte.netanalysis.capcontrol.Message.DnsTransNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zte.netanalysis.capcontrol.Message.DnsTransNotify buildPartial() {
        com.zte.netanalysis.capcontrol.Message.DnsTransNotify result = new com.zte.netanalysis.capcontrol.Message.DnsTransNotify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retryCount_ = retryCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.queryTime_ = queryTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.answerTime_ = answerTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dnsServerIp_ = dnsServerIp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hostName_ = hostName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ipAddr_ = ipAddr_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.zte.netanalysis.capcontrol.Message.DnsTransNotify other) {
        if (other == com.zte.netanalysis.capcontrol.Message.DnsTransNotify.getDefaultInstance()) return this;
        if (other.hasRetryCount()) {
          setRetryCount(other.getRetryCount());
        }
        if (other.hasQueryTime()) {
          setQueryTime(other.getQueryTime());
        }
        if (other.hasAnswerTime()) {
          setAnswerTime(other.getAnswerTime());
        }
        if (other.hasDnsServerIp()) {
          bitField0_ |= 0x00000008;
          dnsServerIp_ = other.dnsServerIp_;
          
        }
        if (other.hasHostName()) {
          bitField0_ |= 0x00000010;
          hostName_ = other.hostName_;
          
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000020;
          ipAddr_ = other.ipAddr_;
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zte.netanalysis.capcontrol.Message.DnsTransNotify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zte.netanalysis.capcontrol.Message.DnsTransNotify) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retryCount_ ;
      /**
       * <code>optional uint32 retryCount = 1;</code>
       */
      public boolean hasRetryCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 retryCount = 1;</code>
       */
      public int getRetryCount() {
        return retryCount_;
      }
      /**
       * <code>optional uint32 retryCount = 1;</code>
       */
      public Builder setRetryCount(int value) {
        bitField0_ |= 0x00000001;
        retryCount_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 retryCount = 1;</code>
       */
      public Builder clearRetryCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retryCount_ = 0;
        
        return this;
      }

      private long queryTime_ ;
      /**
       * <code>optional uint64 queryTime = 2;</code>
       */
      public boolean hasQueryTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 queryTime = 2;</code>
       */
      public long getQueryTime() {
        return queryTime_;
      }
      /**
       * <code>optional uint64 queryTime = 2;</code>
       */
      public Builder setQueryTime(long value) {
        bitField0_ |= 0x00000002;
        queryTime_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 queryTime = 2;</code>
       */
      public Builder clearQueryTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        queryTime_ = 0L;
        
        return this;
      }

      private long answerTime_ ;
      /**
       * <code>optional uint64 answerTime = 3;</code>
       */
      public boolean hasAnswerTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 answerTime = 3;</code>
       */
      public long getAnswerTime() {
        return answerTime_;
      }
      /**
       * <code>optional uint64 answerTime = 3;</code>
       */
      public Builder setAnswerTime(long value) {
        bitField0_ |= 0x00000004;
        answerTime_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 answerTime = 3;</code>
       */
      public Builder clearAnswerTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        answerTime_ = 0L;
        
        return this;
      }

      private java.lang.Object dnsServerIp_ = "";
      /**
       * <code>optional string dnsServerIp = 4;</code>
       */
      public boolean hasDnsServerIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string dnsServerIp = 4;</code>
       */
      public java.lang.String getDnsServerIp() {
        java.lang.Object ref = dnsServerIp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dnsServerIp_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dnsServerIp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDnsServerIpBytes() {
        java.lang.Object ref = dnsServerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dnsServerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dnsServerIp = 4;</code>
       */
      public Builder setDnsServerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        dnsServerIp_ = value;
        
        return this;
      }
      /**
       * <code>optional string dnsServerIp = 4;</code>
       */
      public Builder clearDnsServerIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dnsServerIp_ = getDefaultInstance().getDnsServerIp();
        
        return this;
      }
      /**
       * <code>optional string dnsServerIp = 4;</code>
       */
      public Builder setDnsServerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        dnsServerIp_ = value;
        
        return this;
      }

      private java.lang.Object hostName_ = "";
      /**
       * <code>optional string hostName = 5;</code>
       */
      public boolean hasHostName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string hostName = 5;</code>
       */
      public java.lang.String getHostName() {
        java.lang.Object ref = hostName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hostName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hostName = 5;</code>
       */
      public com.google.protobuf.ByteString
          getHostNameBytes() {
        java.lang.Object ref = hostName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hostName = 5;</code>
       */
      public Builder setHostName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        hostName_ = value;
        
        return this;
      }
      /**
       * <code>optional string hostName = 5;</code>
       */
      public Builder clearHostName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hostName_ = getDefaultInstance().getHostName();
        
        return this;
      }
      /**
       * <code>optional string hostName = 5;</code>
       */
      public Builder setHostNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        hostName_ = value;
        
        return this;
      }

      private java.lang.Object ipAddr_ = "";
      /**
       * <code>optional string ipAddr = 6;</code>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string ipAddr = 6;</code>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ipAddr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ipAddr = 6;</code>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ipAddr = 6;</code>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        ipAddr_ = value;
        
        return this;
      }
      /**
       * <code>optional string ipAddr = 6;</code>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ipAddr_ = getDefaultInstance().getIpAddr();
        
        return this;
      }
      /**
       * <code>optional string ipAddr = 6;</code>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        ipAddr_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.zte.netanalysis.capcontrol.DnsTransNotify)
    }

    static {
      defaultInstance = new DnsTransNotify(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.zte.netanalysis.capcontrol.DnsTransNotify)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
